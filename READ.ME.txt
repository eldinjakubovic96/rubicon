#Terraform podesavanja

1.Terraform download
2.Ukoliko kroz powershell executamo komande, prebaciti exe u folder u kojem cemo uraditi komandu init(u nasem slucaju terraform).
  U nasem slucaju je to pipeline koji povlaci samo terraform file sa resursima.

Napraviti file resources.tf i spasiti ga u folder terraform sa nazivom resources.tf

Prvo je potrebno konektovati se na portal:

az login

Izvrsiti komandu:

terraform init
terraform plan
terraform apply -auto-approve

Napomena:
Nekad bude potrebno 2-3 puta executati ove komande kako bi de resursi naloadali u resursnu grupu. 

--------------------------------------------------------------------------------------------------
Pravljenje docker image-a

#Login u container
az acr login --name crrubicondevops001

#Povlacenje containera
docker run -it hello-world

#Login (kredencijali: container(crrubicondevops001)->Settings->Access keys->Admin user=Enable i kopirati username i password)
docker login crrubicondevops001.azurecr.io

#Docker push
docker tag hello-world crrubicondevops001.azurecr.io/rubiconimage
docker push crrubicondevops001.azurecr.io/rubiconimage

#Docker Pull
docker pull crrubicondevops001.azurecr.io/rubiconimage

#Provjeriti ID docker image-a
docker images

#Docker tag
docker tag <image-id> crrubicondevops001.azurecr.io/rubiconimage:rubiconimage

-----------------------------------------------------------------------------------------------------------

cd C:\

mkdir rubicon

#git clone https://github.com/eldinjakubovic96/rubicon.git
git clone https://github.com/eldinjakubovic96/dotnet-core-db-app.git

dotnet tool install -g dotnet-ef

dotnet ef database update

rm Migrations -r

dotnet ef migrations add InitialCreate
 

$env:ConnectionStrings:MyDbConnection="Server=tcp:sql-rubicon-devops-001.database.windows.net,1433;Database=sqldb-rubicon-devops-001;User ID=rubicon-user;Password=Babaroga1$;Encrypt=true;Connection Timeout=30;"

https://whatismyipaddress.com/
az sql server firewall-rule create --name AllowLocalClient --server sql-rubicon-devops-001 --resource-group rg-rubicon-devops-001 --start-ip-address=188.127.105.214 --end-ip-address=188.127.105.214


dotnet ef database update

git add .
git commit -m "SQL conn"

az webapp deployment user set --user-name rubideploy --password Babaroga1$


az webapp create --resource-group rg-rubicon-devops-001 --plan plan-rubicon-devops-001 --name coredbapp --deployment-local-git --runtime "DOTNETCORE|3.1"
#https://rubideploy@coredbapp.scm.azurewebsites.net/app-rubicon-devops-001.git

az webapp config connection-string set --resource-group rg-rubicon-devops-001 --name app-rubicon-devops-001 --settings MyDbConnection="Server=tcp:sql-rubicon-devops-001.database.windows.net,1433;Database=sqldb-rubicon-devops-001;User ID=rubicon-user;Password=Babaroga1$;Encrypt=true;Connection Timeout=30;" --connection-string-type SQLAzure

git remote add azure https://rubideploy@coredbapp.scm.azurewebsites.net/app-rubicon-devops-001.git

--------------------------

git add .

git commit -m "First commit"

git push origin DEV

----------------------------------------------------------------------------------
Potrebna postavka u firewalls and virtual networks:

Allow azure services and resources to access this server

sql-rubicon-devops-001 -> Security -> Firewalls and virtual networks:

Allow Azure services and resources to access this serve = Yes

-----------------------------------------------------------------------------------

Azure pipeline:

#Importati repo sa githuba:
https://github.com/eldinjakubovic96/rubicon.git

#Nazvati ga: 
Rubi

#U build pipeline importati 2 pipeline iz README foldera

#U release pipeline importati i za svaki pipeline izbrisati dodatak "-import" ili -"Copy"

#Od dodatnih postavki potrebno je dodati samo agent pool i agenta u konfiguracije pipeline-a
